// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { CreateOneTimeJobJobsJobsOneTimePostData, CreateOneTimeJobJobsJobsOneTimePostError, CreateOneTimeJobJobsJobsOneTimePostResponse, CreateCronJobJobsJobsCronPostData, CreateCronJobJobsJobsCronPostError, CreateCronJobJobsJobsCronPostResponse, GetJobJobsJobsJobIdGetData, GetJobJobsJobsJobIdGetError, GetJobJobsJobsJobIdGetResponse, RemoveJobJobsJobsJobIdDeleteData, RemoveJobJobsJobsJobIdDeleteError, RemoveJobJobsJobsJobIdDeleteResponse, GetAllJobsJobsJobsGetError, GetAllJobsJobsJobsGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Create One Time Job
 */
export const createOneTimeJobJobsJobsOneTimePost = <ThrowOnError extends boolean = false>(options: Options<CreateOneTimeJobJobsJobsOneTimePostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateOneTimeJobJobsJobsOneTimePostResponse, CreateOneTimeJobJobsJobsOneTimePostError, ThrowOnError>({
    ...options,
    url: '/jobs/jobs/one-time'
}); };

/**
 * Create Cron Job
 */
export const createCronJobJobsJobsCronPost = <ThrowOnError extends boolean = false>(options: Options<CreateCronJobJobsJobsCronPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateCronJobJobsJobsCronPostResponse, CreateCronJobJobsJobsCronPostError, ThrowOnError>({
    ...options,
    url: '/jobs/jobs/cron'
}); };

/**
 * Get Job
 */
export const getJobJobsJobsJobIdGet = <ThrowOnError extends boolean = false>(options: Options<GetJobJobsJobsJobIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetJobJobsJobsJobIdGetResponse, GetJobJobsJobsJobIdGetError, ThrowOnError>({
    ...options,
    url: '/jobs/jobs/{job_id}'
}); };

/**
 * Remove Job
 */
export const removeJobJobsJobsJobIdDelete = <ThrowOnError extends boolean = false>(options: Options<RemoveJobJobsJobsJobIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<RemoveJobJobsJobsJobIdDeleteResponse, RemoveJobJobsJobsJobIdDeleteError, ThrowOnError>({
    ...options,
    url: '/jobs/jobs/{job_id}'
}); };

/**
 * Get All Jobs
 */
export const getAllJobsJobsJobsGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllJobsJobsJobsGetResponse, GetAllJobsJobsJobsGetError, ThrowOnError>({
    ...options,
    url: '/jobs/jobs'
}); };