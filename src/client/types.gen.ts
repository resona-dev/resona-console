// This file is auto-generated by @hey-api/openapi-ts

export type APIRequest = {
    url: string;
    method?: string;
    headers?: {
        [key: string]: (string);
    };
    body?: unknown;
};

export type APIResponse = {
    status_code: number;
    headers?: {
        [key: string]: (string);
    };
    body?: unknown;
};

export type CronTriggerCreate = {
    cron: string;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type JobCreate = {
    id?: (string | null);
    name?: (string | null);
    request: APIRequest;
    trigger: (OneTimeTriggerCreate | CronTriggerCreate);
};

export type JobResult = {
    completed_at: string;
    error_message?: (string | null);
    response: APIResponse;
};

export type JobStatus = 'pending' | 'active' | 'paused' | 'completed-successful' | 'completed-request-error' | 'completed-response-error' | 'completed-warning';

export type OneTimeTriggerCreate = {
    delay?: (number | null);
    date?: (string | null);
};

export type ScheduledJob = {
    id: string;
    name?: (string | null);
    created_at: string;
    next_run_time?: (string | null);
    status: JobStatus;
    trigger: Trigger;
    request: APIRequest;
    result?: (JobResult | null);
};

export type Trigger = {
    type: TriggerType;
    fields: unknown;
};

export type TriggerType = 'one-time' | 'cron';

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type GetAllJobsResponse = (Array<ScheduledJob>);

export type GetAllJobsError = unknown;

export type CreateJobData = {
    body: JobCreate;
};

export type CreateJobResponse = (ScheduledJob);

export type CreateJobError = (HTTPValidationError);

export type GetAllCompletedJobsResponse = (Array<ScheduledJob>);

export type GetAllCompletedJobsError = unknown;

export type GetJobData = {
    path: {
        job_id: string;
    };
};

export type GetJobResponse = (ScheduledJob);

export type GetJobError = (HTTPValidationError);

export type RemoveJobData = {
    path: {
        job_id: string;
    };
};

export type RemoveJobResponse = (void);

export type RemoveJobError = (HTTPValidationError);

export type PauseJobData = {
    path: {
        job_id: string;
    };
};

export type PauseJobResponse = (ScheduledJob);

export type PauseJobError = (HTTPValidationError);

export type ResumeJobData = {
    path: {
        job_id: string;
    };
};

export type ResumeJobResponse = (ScheduledJob);

export type ResumeJobError = (HTTPValidationError);